{"ast":null,"code":"export class TaskModel {\n  //tarea.status = 1; \n  //tarea.status = 2;\n\n  // Soft DElete  borrado ligero  \n\n  constructor() {\n    let _id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let _name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let _createdAt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let _doneAt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    let _deletedAt = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    if (_id !== null) this.id = _id;\n    if (_name !== null) this.name = _name;\n    this.createdAt = _createdAt === null ? new Date() : new Date(_createdAt);\n    this.doneAt = _doneAt === null ? null : new Date(_doneAt);\n    this.deletedAt = _deletedAt === null ? null : new Date(_deletedAt);\n  }\n  timeElapsed(dateType) {\n    if (dateType == 'done' && this.doneAt !== null) {\n      let timeDiff = new Date() - this.doneAt;\n      // strip the ms\n      timeDiff /= 1000;\n      // get seconds\n      return Math.round(timeDiff);\n    }\n  }\n}","map":{"version":3,"names":["TaskModel","constructor","_id","_name","_createdAt","_doneAt","_deletedAt","id","name","createdAt","Date","doneAt","deletedAt","timeElapsed","dateType","timeDiff","Math","round"],"sources":["/home/hp/CodeGO/react-basics/proj2/src/models/TaskModel.js"],"sourcesContent":["export class TaskModel {\n\n    //tarea.status = 1; \n    //tarea.status = 2;\n\n    // Soft DElete  borrado ligero  \n\n    constructor( _id = null, \n                 _name = null,               \n                 _createdAt = null, \n                 _doneAt = null, \n                 _deletedAt = null\n    ){\n        if ( _id !== null ) this.id = _id;\n        if ( _name !== null ) this.name = _name;\n        this.createdAt = \n            _createdAt === null ? new Date () : new Date (_createdAt);\n        this.doneAt = \n            _doneAt === null ? null : new Date( _doneAt );\n        this.deletedAt = \n            _deletedAt === null ? null : new Date ( _deletedAt );\n    }\n\n\ntimeElapsed(dateType) {\n    if (dateType == 'done' && this.doneAt !== null) {\n        let timeDiff = new Date () - this.doneAt;\n        // strip the ms\n        timeDiff /= 1000;\n        // get seconds\n        return Math.round(timeDiff);\n    }\n}}"],"mappings":"AAAA,OAAO,MAAMA,SAAS,CAAC;EAEnB;EACA;;EAEA;;EAEAC,WAAW,GAKV;IAAA,IALYC,GAAG,uEAAG,IAAI;IAAA,IACVC,KAAK,uEAAG,IAAI;IAAA,IACZC,UAAU,uEAAG,IAAI;IAAA,IACjBC,OAAO,uEAAG,IAAI;IAAA,IACdC,UAAU,uEAAG,IAAI;IAE1B,IAAKJ,GAAG,KAAK,IAAI,EAAG,IAAI,CAACK,EAAE,GAAGL,GAAG;IACjC,IAAKC,KAAK,KAAK,IAAI,EAAG,IAAI,CAACK,IAAI,GAAGL,KAAK;IACvC,IAAI,CAACM,SAAS,GACVL,UAAU,KAAK,IAAI,GAAG,IAAIM,IAAI,EAAG,GAAG,IAAIA,IAAI,CAAEN,UAAU,CAAC;IAC7D,IAAI,CAACO,MAAM,GACPN,OAAO,KAAK,IAAI,GAAG,IAAI,GAAG,IAAIK,IAAI,CAAEL,OAAO,CAAE;IACjD,IAAI,CAACO,SAAS,GACVN,UAAU,KAAK,IAAI,GAAG,IAAI,GAAG,IAAII,IAAI,CAAGJ,UAAU,CAAE;EAC5D;EAGJO,WAAW,CAACC,QAAQ,EAAE;IAClB,IAAIA,QAAQ,IAAI,MAAM,IAAI,IAAI,CAACH,MAAM,KAAK,IAAI,EAAE;MAC5C,IAAII,QAAQ,GAAG,IAAIL,IAAI,EAAG,GAAG,IAAI,CAACC,MAAM;MACxC;MACAI,QAAQ,IAAI,IAAI;MAChB;MACA,OAAOC,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC;IAC/B;EACJ;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}