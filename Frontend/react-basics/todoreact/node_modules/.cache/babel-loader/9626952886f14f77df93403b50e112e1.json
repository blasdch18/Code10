{"ast":null,"code":"const url = \"https://63659f46046eddf1baf09724.mockapi.io/tasks\";\n\n// GET : Listar\n// POST: Crear\n// PUT: Actualizar\n// DELETE: Eliminar\nexport const getProfile = async () => {\n  try {\n    const response = await fetch(\"https://api.github.com/users/linder3hs\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(\"Error\", error);\n  }\n};\nexport const get = async () => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getById = async id => {\n  try {\n    const response = await fetch(url + \"/\" + id);\n    console.log(response);\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\nexport const post = async body => {\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// id: Tarea\nexport const update = async (id, body) => {\n  try {\n    const response = await fetch(`${url}/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// Para la eliminar un registro unicamente necesito el id\nexport const destroy = async id => {\n  try {\n    const response = await fetch(`${url}/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["url","getProfile","response","fetch","data","json","error","console","log","get","getById","id","ok","post","body","method","headers","JSON","stringify","update","destroy"],"sources":["/home/hp/CodeGO/react-basics/todoreact/src/services/index.js"],"sourcesContent":["const url = \"https://63659f46046eddf1baf09724.mockapi.io/tasks\";\n\n// GET : Listar\n// POST: Crear\n// PUT: Actualizar\n// DELETE: Eliminar\nexport const getProfile = async () => {\n\ttry {\n\t\tconst response = await fetch(\"https://api.github.com/users/linder3hs\");\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.log(\"Error\", error);\n\t}\n};\n\nexport const get = async () => {\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\nexport const getById = async (id) => {\n\ttry {\n\t\tconst response = await fetch(url + \"/\" + id);\n\t\tconsole.log(response);\n\t\tif (response.ok) {\n\t\t\tconst data = await response.json();\n\t\t\treturn data;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t} catch (error) {\n\t\tconsole.log(error);\n\t\treturn null;\n\t}\n};\n\nexport const post = async (body) => {\n\ttry {\n\t\tconst response = await fetch(url, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(body),\n\t\t});\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\n// id: Tarea\nexport const update = async (id, body) => {\n\ttry {\n\t\tconst response = await fetch(`${url}/${id}`, {\n\t\t\tmethod: \"PUT\",\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(body),\n\t\t});\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\n// Para la eliminar un registro unicamente necesito el id\nexport const destroy = async (id) => {\n\ttry {\n\t\tconst response = await fetch(`${url}/${id}`, {\n\t\t\tmethod: \"DELETE\",\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"application/json\",\n\t\t\t},\n\t\t});\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}